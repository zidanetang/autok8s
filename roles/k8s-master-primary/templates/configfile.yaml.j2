---
#source from:
#https://godoc.org/k8s.io/kubernetes/cmd/kubeadm/app/apis/kubeadm/v1beta1
apiVersion: kubeadm.k8s.io/v1beta2
kind: InitConfiguration
# bootstrapTokens:
# - token: "9a08jv.c0izixklcxtmnze7"
#   description: "kubeadm bootstrap token"
#   ttl: "24h"
# - token: "783bde.3f89s0fje9f38fhf"
#   description: "another bootstrap token"
#   usages:
#   - authentication
#   - signing
#   groups:
#   - system:bootstrappers:kubeadm:default-node-token
nodeRegistration:
#   name: "ec2-10-100-0-1"
#   criSocket: "/var/run/dockershim.sock"
#  Schedule Pods to Master
#   taints:
#   - key: "kubeadmNode"
#     value: "master"
#     effect: "NoSchedule"
  kubeletExtraArgs:
    cgroup-driver: "cgroupfs"
#localAPIEndpoint:
#   advertiseAddress: "10.100.0.1"
#   bindPort: 6443
# certificateKey: "e6a2eb8581237ab72a4f494f30285ec12a9694d750b9785706a83bfcbbbd2204"

---
apiVersion: kubeadm.k8s.io/v1beta2
kind: ClusterConfiguration
etcd:
#   # one of local or external
  local:
    imageRepository: "k8s.gcr.io"
    imageTag: "3.2.24"
    dataDir: "/var/lib/etcd"
#     extraArgs:
#       listen-client-urls: "http://10.100.0.1:2379"
#     serverCertSANs:
#     -  "ec2-10-100-0-1.compute-1.amazonaws.com"
#     peerCertSANs:
#     - "10.100.0.1"
  # external:
    # endpoints:
    # - "10.100.0.1:2379"
    # - "10.100.0.2:2379"
    # caFile: "/etcd/kubernetes/pki/etcd/etcd-ca.crt"
    # certFile: "/etcd/kubernetes/pki/etcd/etcd.crt"
    # keyFile: "/etcd/kubernetes/pki/etcd/etcd.key"
networking:
  serviceSubnet: {{ servicesubnet}}
  podSubnet: {{ podsunbet }}
  dnsDomain: {{ dnsDomain }}
kubernetesVersion: "v{{ KUBERNETES_VERSION }}"
#controlPlaneEndpoint: "10.100.0.1:6443"
apiServer:
# https://kubernetes.io/docs/admin/kube-apiserver/
  extraArgs:
    authorization-mode: "Node,RBAC"
# default: 32000-32767
#      service-node-port-range: '79-32767'
#   extraVolumes:
#   - name: "some-volume"
#     hostPath: "/etc/some-path"
#     mountPath: "/etc/some-pod-path"
#     readOnly: false
#     pathType: File
#   certSANs:
#   - "10.100.1.1"
#   - "ec2-10-100-0-1.compute-1.amazonaws.com"
  timeoutForControlPlane: 4m0s
# controllerManager:
#   extraArgs:
#     "node-cidr-mask-size": "20"
#   extraVolumes:
#   - name: "some-volume"
#     hostPath: "/etc/some-path"
#     mountPath: "/etc/some-pod-path"
#     readOnly: false
#     pathType: File
# scheduler:
#   extraArgs:
#     address: "10.100.0.1"
# extraVolumes:
# - name: "some-volume"
#   hostPath: "/etc/some-path"
#   mountPath: "/etc/some-pod-path"
#   readOnly: false
#   pathType: File
# certificatesDir: "/etc/kubernetes/pki"
# imageRepository: "k8s.gcr.io"
# useHyperKubeImage: false
clusterName: {{ dnsDomain | default("cluster.local")}}

---
apiVersion: kubelet.config.k8s.io/v1beta1
kind: KubeletConfiguration
# kubelet specific options here

---
apiVersion: kubeproxy.config.k8s.io/v1alpha1
kind: KubeProxyConfiguration
# kube-proxy specific options here
